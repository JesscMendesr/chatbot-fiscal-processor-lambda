name: CI/CD AWS Lambda com Terraform (Aprimorado)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Permite o login seguro (OIDC)
      contents: read
      
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      # 1. Configurar AWS Credentials
      # O Role assume que o AWS_DEPLOY_ROLE_ARN está no GitHub Secrets
      - name: Configurar AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: us-east-2

      # 2. Configuração do Terraform
      - name: Configurar Terraform CLI
        uses: hashicorp/setup-terraform@v3

      # --- ETAPAS DE QUALIDADE DO CÓDIGO (CI) ---
      
      # 3. Verificar Formatação (Se falhar, o código .tf precisa de 'terraform fmt')
      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check

      # 4. Inicializar Terraform (Baixa dependências e configura o backend S3)
      - name: Terraform Init
        id: init
        run: terraform init

      # 5. Validar Sintaxe da Configuração (Checa erros lógicos e de sintaxe)
      - name: Terraform Validate
        id: validate
        run: terraform validate
      
      # 5.1. ETAPA TEMPORÁRIA: Importar recurso existente (Para correções únicas)
      # **APAGUE ESTE BLOCO APÓS O PRIMEIRO PUSH DE SUCESSO.**
      - name: Terraform Import da Lambda Existente
        id: import
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          # O nome do recurso na AWS é chatbot-fiscal-processor7
          terraform import aws_lambda_function.minha_funcao_tf chatbot-fiscal-processor || true
          
      # --- ETAPA DE PLANEJAMENTO (CI/CD) ---
        
      # 6. Gera o Plano
      - name: Terraform Plan
        id: plan
        # Salva o plano em um arquivo para ser usado no Apply ou apenas para revisão em PR
        run: terraform plan -no-color -input=false -out=tfplan

      # --- ETAPA DE APLICAÇÃO (CD) ---

      # 7. Aplica o Plano
      - name: Terraform Apply
        id: apply
        # Condição: Aplica SOMENTE se for um push direto para a branch principal (main).
        # Isso evita que o apply rode em Pull Requests.
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve tfplan
